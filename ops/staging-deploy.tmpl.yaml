replicaCount: 2

resources:
  limits:
    memory: "4Gi"
    cpu: "500m"
  requests:
    memory: "2Gi"
    cpu: "250m"

livenessProbe:
  enabled: false
readinessProbe:
  enabled: false

brandingVolume:
  storageClass: aws-efs
derivativesVolume:
  storageClass: aws-efs
uploadsVolume:
  storageClass: aws-efs
  size: 200Gi

imagePullSecrets:
 - name: github

extraVolumeMounts: &volMounts
  - name: uploads
    mountPath: /app/samvera/hyrax-webapp/tmp/imports
    subPath: imports
  - name: uploads
    mountPath: /app/samvera/hyrax-webapp/tmp/exports
    subPath: exports
  - name: uploads
    mountPath: /app/samvera/hyrax-webapp/public/system
    subPath: public-system
  - name: uploads
    mountPath: /app/samvera/hyrax-webapp/public/uploads
    subPath: public-uploads
  - name: uploads
    mountPath: /app/samvera/hyrax-webapp/tmp/network_files
    subPath: network-files
  - name: uploads
    mountPath: /app/samvera/hyrax-webapp/storage/files
    subPath: storage-files

ingress:
  enabled: true
  hosts:
    - host: palni-palci-staging.notch8.cloud
      paths:
        - path: /
          pathType: ImplementationSpecific
    - host: "*.palni-palci-staging.notch8.cloud"
      paths:
        - path: /
          pathType: ImplementationSpecific
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    cert-manager.io/cluster-issuer: "letsencrypt-production-dns"
  tls:
    - hosts:
        - palni-palci-staging.notch8.cloud
        - "*.palni-palci-staging.notch8.cloud"
      secretName: palni-palci-staging-tls

extraEnvVars: &envVars
  - name: BUNDLE_BUNDLER_INJECT__GEM_PATH
    value: /app/samvera/bundler.d
  - name: BUNDLE_DISABLE_LOCAL_BRANCH_CHECK
    value: "true"
  - name: BUNDLE_LOCAL__HYKU_KNAPSACK
    value: /app/samvera
  - name: CLIENT_ADMIN_USER_EMAIL
    value: $CLIENT_ADMIN_USER_EMAIL
  - name: CLIENT_ADMIN_USER_PASSWORD
    value: $CLIENT_ADMIN_USER_PASSWORD
  - name: CONFDIR
    value: "/app/samvera/hyrax-webapp/solr/conf"
  - name: DB_ADAPTER
    value: postgresql
  - name: DB_HOST
    value: pg-postgresql.staging-postgres.svc.cluster.local
  - name: DB_NAME
    value: palni-palci-staging
  - name: DB_USER
    value: postgres
  - name: FCREPO_BASE_PATH
    value: /palni-palci-staging
  - name: FCREPO_HOST
    value: palni-palci-knapsack-staging-fcrepo
  - name: FCREPO_PORT
    value: "8080"
  - name: FCREPO_REST_PATH
    value: rest
  - name: GOOGLE_ANALYTICS_ID
    value: $GOOGLE_ANALYTICS_ID
  - name: GOOGLE_ANALYTICS_PROPERTY_ID
    value: "$GOOGLE_ANALYTICS_PROPERTY_ID"
  - name: GOOGLE_ACCOUNT_JSON
    value: $GOOGLE_ACCOUNT_JSON
  - name: HYKU_ADMIN_HOST
    value: palni-palci-staging.notch8.cloud
  - name: HYKU_ADMIN_ONLY_TENANT_CREATION
    value: "false"
  - name: HYKU_ALLOW_SIGNUP
    value: "false"
  - name: HYKU_BLOCK_VALKYRIE_REDIRECT
    value: "false"
  - name: HYKU_BULKRAX_ENABLED
    value: "true"
  - name: HYKU_CONTACT_EMAIL
    value: support@notch8.com
  - name: HYKU_DEFAULT_HOST
    value: "%{tenant}.palni-palci-staging.notch8.cloud"
  - name: HYKU_FILE_ACL
    value: "false"
  - name: HYKU_MULTITENANT
    value: "true"
  - name: HYKU_ROOT_HOST
    value: palni-palci-staging.notch8.cloud
  - name: HYRAX_ACTIVE_JOB_QUEUE
    value: sidekiq
  - name: HYRAX_ANALYTICS
    value: "true"
  - name: HYRAX_ANALYTICS_PROVIDER
    value: 'ga4'
  - name: HYRAX_FITS_PATH
    value: /app/fits/fits.sh
  - name: HYRAX_VALKYRIE
    value: "true"
  - name: IN_DOCKER
    value: "true"
  - name: INITIAL_ADMIN_EMAIL
    value: admin@example.com
  - name: INITIAL_ADMIN_PASSWORD
    value: testing123
  - name: LD_LIBRARY_PATH
    value: /app/fits/tools/mediainfo/linux
  - name: NEGATIVE_CAPTCHA_SECRET
    value: $NEGATIVE_CAPTCHA_SECRET
  - name: RAILS_CACHE_STORE_URL
    value: redis://:$REDIS_PASSWORD@palni-palci-knapsack-staging-redis-master:6379/0
  - name: RAILS_ENV
    value: production
  - name: RAILS_LOG_TO_STDOUT
    value: "true"
  - name: RAILS_MAX_THREADS
    value: "5"
  - name: RAILS_SERVE_STATIC_FILES
    value: "true"
  - name: REDIS_HOST
    value: palni-palci-knapsack-staging-redis-master
  - name: REDIS_URL
    value: redis://:$REDIS_PASSWORD@palni-palci-knapsack-staging-redis-master:6379/0
  - name: SENTRY_DSN
    value: $SENTRY_DSN
  - name: SENTRY_ENVIRONMENT
    value: $SENTRY_ENVIRONMENT
  - name: SMTP_ADDRESS
    value: "maildev-smtp.maildev.svc.cluster.local"
  - name: SMTP_DOMAIN
    value: "maildev-smtp.maildev.svc.cluster.local"
  - name: SMTP_ENABLED
    value: "true"
  - name: SMTP_PORT
    value: "1025"
  - name: SMTP_TYPE
    value: "plain"
  - name: SMTP_USER_NAME
    value: "admin"
  - name: SMTP_STARTTLS
    value: "false"
  - name: SMTP_PASSWORD
    value: $SMTP_PASSWORD
  - name: SOLR_ADMIN_PASSWORD
    value: $SOLR_ADMIN_PASSWORD
  - name: SOLR_ADMIN_USER
    value: admin
  - name: SOLR_COLLECTION_NAME
    value: palni-palci-staging
  - name: SOLR_CONFIGSET_NAME
    value: palni-palci-staging
  - name: SOLR_HOST
    value: solr.staging-solr
  - name: SOLR_PORT
    value: "8983"
  - name: SOLR_URL
    value: http://admin:$SOLR_ADMIN_PASSWORD@solr.staging-solr:8983/solr/
  - name: TEST_USER_EMAIL
    value: user@example.com
  - name: TEST_USER_PASSWORD
    value: testing123
  - name: VALKYRIE_ID_TYPE
    value: string

worker:
  replicaCount: 1
  extraVolumeMounts: *volMounts
  extraEnvVars: *envVars
  podSecurityContext:
    runAsUser: 1001
    runAsGroup: 101
    fsGroup: 101
    fsGroupChangePolicy: "OnRootMismatch"
podSecurityContext:
  runAsUser: 1001
  runAsGroup: 101
  fsGroup: 101
  fsGroupChangePolicy: "OnRootMismatch"

# When adding/removing key-value pairs to this block, ensure the
# corresponding changes are made in the `extraDeploy` block below.
workerAuxiliary:
  replicaCount: 1
  resources:
    limits:
      memory: "12Gi"
      cpu: "4"
    requests:
      memory: "4Gi"
      cpu: "2"
  extraEnvVars:
    - name: AUXILIARY_WORKER_THREAD_COUNT
      value: "1"
    - name: SIDEKIQ_CONFIG
      value: "config/sidekiq_auxiliary.yml"

extraDeploy:
  - |-
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: {{ include "hyrax.fullname" . }}-auxiliary-worker
        labels:
          {{- include "hyrax.labels" . | nindent 4 }}
      spec:
        replicas: {{ .Values.workerAuxiliary.replicaCount }}
        selector:
          matchLabels:
            {{- include "hyrax.workerSelectorLabels" . | nindent 6 }}
        template:
          metadata:
          {{- with .Values.podAnnotations }}
            annotations:
              {{- toYaml . | nindent 8 }}
          {{- end }}
            labels:
              {{- include "hyrax.workerSelectorLabels" . | nindent 8 }}
          spec:
            initContainers:
              - name: db-wait
                image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
                imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
                envFrom:
                  - configMapRef:
                      name: {{ include "hyrax.fullname" . }}-env
                  - secretRef:
                      name: {{ template "hyrax.fullname" . }}
                env:
                  {{- toYaml .Values.workerAuxiliary.extraEnvVars | nindent 12 }}
                  {{- toYaml .Values.worker.extraEnvVars | nindent 12 }}
                command:
                  - sh
                  - -c
                  - "db-wait.sh {{ include "hyrax.redis.host" . }}:6379"
              {{- if .Values.worker.extraInitContainers }}
              {{- toYaml .Values.worker.extraInitContainers | nindent 8 }}
              {{- end }}
            {{- with .Values.imagePullSecrets }}
            imagePullSecrets:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            serviceAccountName: {{ include "hyrax.serviceAccountName" . }}
            securityContext:
              {{- toYaml .Values.worker.podSecurityContext | nindent 8 }}
            containers:
              - name: {{ .Chart.Name }}-worker
                securityContext:
                  {{- toYaml .Values.worker.securityContext | nindent 12 }}
                image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag | default .Chart.AppVersion }}"
                imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
                envFrom:
                  - configMapRef:
                      name: {{ include "hyrax.fullname" . }}-env
                  - secretRef:
                      name: {{ template "hyrax.fullname" . }}
                  {{- if .Values.solrExistingSecret }}
                  - secretRef:
                      name: {{ .Values.solrExistingSecret }}
                  {{- end }}
                  {{- with .Values.worker.extraEnvFrom }}
                    {{- toYaml . | nindent 12 }}
                  {{- end }}
                env:
                  {{- toYaml .Values.workerAuxiliary.extraEnvVars | nindent 12 }}
                  {{- toYaml .Values.worker.extraEnvVars | nindent 12 }}
                {{- if .Values.worker.readinessProbe.enabled }}
                readinessProbe:
                  exec:
                    command:
                      {{- toYaml .Values.worker.readinessProbe.command | nindent 16 }}
                  failureThreshold: {{ .Values.worker.readinessProbe.failureThreshold }}
                  initialDelaySeconds: {{ .Values.worker.readinessProbe.initialDelaySeconds }}
                  periodSeconds: {{ .Values.worker.readinessProbe.periodSeconds }}
                  successThreshold: {{ .Values.worker.readinessProbe.successThreshold }}
                  timeoutSeconds: {{ .Values.worker.readinessProbe.timeoutSeconds }}
                {{- end }}
                volumeMounts:
                  - name: derivatives
                    mountPath: /app/samvera/derivatives
                  - name: uploads
                    subPath: file_cache
                    mountPath: /app/samvera/file_cache
                  - name: uploads
                    subPath: uploads
                    mountPath: /app/samvera/uploads
                  {{- if .Values.applicationExistingClaim }}
                  - name: application
                    mountPath: /app/samvera/hyrax-webapp
                  {{- end }}
                  {{- with .Values.worker.extraVolumeMounts }}
                  {{- toYaml . | nindent 12 }}
                  {{- end }}
                resources:
                  {{- toYaml .Values.workerAuxiliary.resources | nindent 12 }}
                {{- with .Values.extraContainerConfiguration }}
                {{- toYaml . | nindent 10 }}
                {{- end }}
            volumes:
              - name: "derivatives"
                {{- if and .Values.derivativesVolume.enabled .Values.derivativesVolume.existingClaim }}
                persistentVolumeClaim:
                  claimName: {{ .Values.derivativesVolume.existingClaim }}
                {{- else if .Values.derivativesVolume.enabled }}
                persistentVolumeClaim:
                  claimName: {{ template "hyrax.fullname" . }}-derivatives
                {{ else }}
                emptyDir: {}
                {{ end }}
              - name: "uploads"
                {{- if and .Values.uploadsVolume.enabled .Values.uploadsVolume.existingClaim }}
                persistentVolumeClaim:
                  claimName: {{ .Values.uploadsVolume.existingClaim }}
                {{- else if .Values.uploadsVolume.enabled }}
                persistentVolumeClaim:
                  claimName: {{ template "hyrax.fullname" . }}-uploads
                {{ else }}
                emptyDir: {}
                {{ end }}
              {{- if .Values.applicationExistingClaim }}
              - name: "application"
                persistentVolumeClaim:
                  claimName: {{ .Values.applicationExistingClaim }}
              {{- end }}
              {{- with .Values.worker.extraVolumes }}
              {{- toYaml . | nindent 8 }}
              {{- end }}
            {{- with .Values.worker.nodeSelector }}
            nodeSelector:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.worker.affinity }}
            affinity:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.worker.tolerations }}
            tolerations:
              {{- toYaml . | nindent 8 }}
            {{- end }}

embargoRelease:
  enabled: false
leaseRelease:
  enabled: false

fcrepo:
  enabled: true
  servicePort: 8080
  postgresql:
    password: $DB_PASSWORD
    auth:
      password: $DB_PASSWORD
    enabled: true
    image:
      repository: bitnami/postgresql
      tag: 12.17.0-debian-11-r28
  s3:
    enabled: true
    bucket: besties-fcrepo-clone
    access_key: $AWS_ACCESS_KEY_ID
    secret_key: $AWS_SECRET_ACCESS_KEY
global:
  postgresql:
    auth:
      postgresPassword: $DB_PASSWORD
postgresql:
  enabled: false
redis:
  enabled: true
  architecture: standalone
  auth:
    password: $REDIS_PASSWORD
solr:
  enabled: false
fits:
  enabled: true
  servicePort: 8080
  subPath: /fits

externalPostgresql:
  host: pg-postgresql.staging-postgres.svc.cluster.local
  username: postgres
  database: palni-palci-staging
  password: $DB_PASSWORD

externalSolrHost: solr.staging-solr.svc.cluster.local
externalSolrUser: admin
externalSolrCollection: "palni-palci-staging"
externalSolrPassword: $SOLR_ADMIN_PASSWORD

nginx:
  enabled: false
  service:
    port: 80
